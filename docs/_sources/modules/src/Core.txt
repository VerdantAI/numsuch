.. default-domain:: chpl

.. module:: Core

Core
====
**Usage**

.. code-block:: chapel

   use Core;

.. enum:: enum labelReplacementType { none, inverseDegree }

.. class:: LabelMatrix

   
   Class to hold labels for data.  Has names in names
   


   .. attribute:: var ldom: domain(1) = {1..0}

   .. attribute:: var dataDom: domain(2)

   .. attribute:: var nLabelValues: int = 0

   .. attribute:: var data: [dataDom] real

   .. attribute:: var names: [ldom] string

   .. attribute:: var trainingLabelDom: ldom.defaultSparseDistchpl__buildSparseDomainRuntimeTypeldom

   .. method:: proc readFromFile(fn: string, addDummy: bool = false, useCols = false)

      
      Loads a label file into a Matrix.  Labels should be binary indicators
      :arg useCols: use columns for the labels, as in an indicator for each column. default is to have an integer representing the label <TAB> separated
      
      ::
      
          <record id: string> <category 1 indicator> ... <category L indicator>
      
           

   .. method:: proc fromMatrix(y: [])

.. function:: proc cosineDistance(X: [?Xdom], denseOutput = true)

   
   Does the pairwise cosine distance between rows of X.
   Dimensions must be conformable
   

.. function:: proc cosineDistance(X: [?Xdom], Y: [?Ydom], denseOutput = true)

   
   Does the pairwise cosine distance between rows of X and rows of Y.
   Dimensions must be conformable
   

.. function:: proc subSampleLabels(L: LabelMatrix, sampleSize: int, replacementMethod: labelReplacementType = labelReplacementType.none)

   
   

.. function:: proc argmax1d(x: [])

   
   Internal routine to find the argmax along a dense vector
    

.. function:: proc argmin1d(x: [])

.. function:: proc argmin(x: [], axis: int = 0)

.. function:: proc argmax(x: [], axis: int = 0)

   
   
   
   :arg x: 1 or 2D numeric array
   :arg axis: integer indicting dimension of the object.
   :arg axis=0: (default) argmax over whole object
   :arg axis=1: integer indicting dimension of the object.
   :arg axis=1: integer indicting dimension of the object.
   :return: In the case of axis=0 this is the (i,j) coordinate of the max.
   :rtype: tuple
   

.. function:: proc xlog2x(x: real)

   
   Returns x * log_2 (x)... I'll write it in LaTeX later
   

.. iterfunction:: iter letters(n: int)

   
   Iterator to generate labels A, B, ... AA, BB, ... etc
    

.. iterfunction:: iter gridNames(i: int, j: int = 0)

